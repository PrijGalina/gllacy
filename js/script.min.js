const map_block = document.querySelector("#map"); if (map_block) { function initMap() { map = new google.maps.Map(document.getElementById("map"), { center: { lat: 59.938897, lng: 30.328693 }, zoom: 15, disableDefaultUI: !0, scrollwheel: !1 }), marker = new google.maps.Marker({ position: { lat: 59.938635, lng: 30.323118 }, map: map, icon: "img/pin.svg" }) } function addScript(e) { var t = document.createElement("script"); t.src = e, t.async = !1, document.head.appendChild(t) } addScript("https://maps.googleapis.com/maps/api/js?callback=initMap&key=AIzaSyAImiABCDquzpZQ4aQHQU-g89xQEHinWHM"), function () { var e = EventTarget.prototype.addEventListener; EventTarget.prototype.addEventListener = function (t, o, a) { this.func = e, (a = a || {}).passive = !1, this.func(t, o, a) } }() } let body_element = document.querySelector(".page-body"), main_slider_controls = document.querySelectorAll(".main-slider-controls-item"), main_slider_items = document.querySelectorAll(".main-slider-item"); main_slider_controls.forEach(function (e, t) { e.addEventListener("click", function (o) { o.preventDefault(); let a = document.querySelector(".current-controls"), l = document.querySelector(".current-slide"); if (e !== a) { a.classList.remove("current-controls"), l.classList.remove("current-slide"), e.classList.add("current-controls"), main_slider_items[t].classList.add("current-slide"); let o = l.getAttribute("data-page-bg"); body_element.classList.remove(o) } let n = main_slider_items[t].getAttribute("data-page-bg"); body_element.classList.add(n), e.blur() }) }); let overlay = document.querySelector(".overlay"), contact_modal_open_button = document.querySelector(".open-contact-form"), contact_modal = document.querySelector(".modal-contact"), iterationCount = 0, isStorageSupport = !0, login_form = document.querySelector(".login-form"); const storage_name = "", storage_email = ""; try { storage_name = localStorage.getItem("name"), storage_email = localStorage.getItem("email") } catch (e) { isStorageSupport = !1 } if (login_form) { login_form.querySelector(".login-form-btn"); let e = login_form.querySelector("[name=login-user-email]"), t = login_form.querySelector("[name=login-user-pass]"); login_form.addEventListener("submit", function (o) { o.preventDefault(), e.value && t.value ? login_form.submit() : (o.preventDefault(), login_form.classList.add("modal-error")) }) } if (contact_modal) { let e = contact_modal.querySelector(".modal-close"), t = contact_modal.querySelector(".contact-form"), o = t.querySelector("[name=contact-name]"), a = t.querySelector("[name=user-email]"), l = t.querySelector("textarea"); contact_modal_open_button.addEventListener("click", function (e) { e.preventDefault(), overlay.classList.add("open"), contact_modal.classList.add("modal-open"), contact_modal.classList.add("modal-emergence"), storage_name ? (o.value = storage_name, a.value = storage_email, l.focus()) : o.focus() }), e.addEventListener("click", function (e) { e.preventDefault(), contact_modal.classList.remove("modal-open"), contact_modal.classList.remove("modal-emergence"), overlay.classList.remove("open"), contact_modal.classList.remove("modal-error") }), t.addEventListener("submit", function (e) { o.value && a.value ? isStorageSupport && (localStorage.setItem("name", o.value), localStorage.setItem("email", a.value)) : (e.preventDefault(), contact_modal.classList.add("modal-error")) }), contact_modal.addEventListener("animationend", () => { contact_modal.classList.contains("modal-error") && (contact_modal.classList.remove("modal-error"), contact_modal.classList.remove("modal-emergence")) }) } overlay && overlay.addEventListener("click", function (e) { e.preventDefault(), contact_modal.classList.remove("modal-open"), contact_modal.classList.remove("modal-emergence"), overlay.classList.remove("open") });